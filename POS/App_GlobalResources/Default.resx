<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="add_category" xml:space="preserve">
    <value>Add Category</value>
  </data>
  <data name="add_customer" xml:space="preserve">
    <value>Add Customer</value>
  </data>
  <data name="add_expense" xml:space="preserve">
    <value>Add Expense</value>
  </data>
  <data name="add_gift_card" xml:space="preserve">
    <value>Add Gift Card</value>
  </data>
  <data name="add_printer" xml:space="preserve">
    <value>Add Printer</value>
  </data>
  <data name="add_product" xml:space="preserve">
    <value>Add Product</value>
  </data>
  <data name="add_purchase" xml:space="preserve">
    <value>Add Purchase</value>
  </data>
  <data name="add_store" xml:space="preserve">
    <value>Add Store</value>
  </data>
  <data name="add_supplier" xml:space="preserve">
    <value>Add Supplier</value>
  </data>
  <data name="add_user" xml:space="preserve">
    <value>Add User</value>
  </data>
  <data name="amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="apply_to_order" xml:space="preserve">
    <value>Apply To Order</value>
  </data>
  <data name="apply_to_products" xml:space="preserve">
    <value>Apply To Products</value>
  </data>
  <data name="backups" xml:space="preserve">
    <value>Backups</value>
  </data>
  <data name="balance" xml:space="preserve">
    <value>Balance</value>
  </data>
  <data name="bill" xml:space="preserve">
    <value>Bill</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="card_type" xml:space="preserve">
    <value>Card Type</value>
  </data>
  <data name="cash" xml:space="preserve">
    <value>Cash</value>
  </data>
  <data name="categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="cc" xml:space="preserve">
    <value>CC</value>
  </data>
  <data name="cc_holder" xml:space="preserve">
    <value>CC Holder</value>
  </data>
  <data name="cc_no" xml:space="preserve">
    <value>CC No</value>
  </data>
  <data name="cf1" xml:space="preserve">
    <value>cf1</value>
  </data>
  <data name="cf2" xml:space="preserve">
    <value>cf2</value>
  </data>
  <data name="cheque" xml:space="preserve">
    <value>Cheque</value>
  </data>
  <data name="cheque_no" xml:space="preserve">
    <value>Cheque No</value>
  </data>
  <data name="close" xml:space="preserve">
    <value>close</value>
  </data>
  <data name="close_register" xml:space="preserve">
    <value>Close Register</value>
  </data>
  <data name="current_quantity" xml:space="preserve">
    <value>Current Quantity</value>
  </data>
  <data name="cvv2" xml:space="preserve">
    <value>CVV2</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="discount" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="discount_title" xml:space="preserve">
    <value>Discount (5 or 5%)</value>
  </data>
  <data name="email_address" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="enter_info" xml:space="preserve">
    <value>Enter Info</value>
  </data>
  <data name="filter_by_reference" xml:space="preserve">
    <value>Filter by Reference</value>
  </data>
  <data name="focus_swipe_here" xml:space="preserve">
    <value>Focus Swipe Here</value>
  </data>
  <data name="gift_card" xml:space="preserve">
    <value>Gift Card</value>
  </data>
  <data name="gift_cards" xml:space="preserve">
    <value>Gift Cards</value>
  </data>
  <data name="gift_card_no" xml:space="preserve">
    <value>Gift Card No</value>
  </data>
  <data name="hold" xml:space="preserve">
    <value>Hold</value>
  </data>
  <data name="import_categories" xml:space="preserve">
    <value>Import Categories</value>
  </data>
  <data name="import_products" xml:space="preserve">
    <value>Import Products</value>
  </data>
  <data name="list_categories" xml:space="preserve">
    <value>List Categories</value>
  </data>
  <data name="list_customers" xml:space="preserve">
    <value>List Customers</value>
  </data>
  <data name="list_expenses" xml:space="preserve">
    <value>List Expenses</value>
  </data>
  <data name="list_gift_cards" xml:space="preserve">
    <value>List Gift Cards</value>
  </data>
  <data name="list_opened_bills" xml:space="preserve">
    <value>List Opened Bills</value>
  </data>
  <data name="list_products" xml:space="preserve">
    <value>List Products</value>
  </data>
  <data name="list_purchases" xml:space="preserve">
    <value>List Purchases</value>
  </data>
  <data name="list_sales" xml:space="preserve">
    <value>List Sales</value>
  </data>
  <data name="list_suppliers" xml:space="preserve">
    <value>List Suppliers</value>
  </data>
  <data name="list_users" xml:space="preserve">
    <value>List Users</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>LogIn</value>
  </data>
  <data name="master_card" xml:space="preserve">
    <value>Master Card</value>
  </data>
  <data name="merchant_copy" xml:space="preserve">
    <value>Merchant Copy</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="net_price" xml:space="preserve">
    <value>Net Price</value>
  </data>
  <data name="new_price" xml:space="preserve">
    <value>New Price</value>
  </data>
  <data name="note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="order_tax" xml:space="preserve">
    <value>Order Tax</value>
  </data>
  <data name="other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="payment" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="payment_note" xml:space="preserve">
    <value>Payment Note</value>
  </data>
  <data name="people" xml:space="preserve">
    <value>People</value>
  </data>
  <data name="phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="POS" xml:space="preserve">
    <value>POS</value>
  </data>
  <data name="pos_print_error" xml:space="preserve">
    <value>Unable to connect to socket, please make sure that server is up and running fine.</value>
  </data>
  <data name="price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="printers" xml:space="preserve">
    <value>Printers</value>
  </data>
  <data name="print_barcodes" xml:space="preserve">
    <value>Print Barcodes</value>
  </data>
  <data name="print_bill" xml:space="preserve">
    <value>Print Bill</value>
  </data>
  <data name="print_labels" xml:space="preserve">
    <value>Print Labels</value>
  </data>
  <data name="print_order" xml:space="preserve">
    <value>Print Order</value>
  </data>
  <data name="product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="product_tax" xml:space="preserve">
    <value>Product Tax</value>
  </data>
  <data name="purchases" xml:space="preserve">
    <value>Purchases</value>
  </data>
  <data name="qty" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="reference_note" xml:space="preserve">
    <value>Reference Note</value>
  </data>
  <data name="register_details" xml:space="preserve">
    <value>Register Details</value>
  </data>
  <data name="sales" xml:space="preserve">
    <value>Sales</value>
  </data>
  <data name="search__scan" xml:space="preserve">
    <value>Search product by code or name, you can scan barcode too</value>
  </data>
  <data name="SelectLanguage" xml:space="preserve">
    <value>Select Language</value>
  </data>
  <data name="sell_gift_card" xml:space="preserve">
    <value>Sell Gift Card</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Stores" xml:space="preserve">
    <value>Stores</value>
  </data>
  <data name="stripe" xml:space="preserve">
    <value>Stripe</value>
  </data>
  <data name="submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="subtotal" xml:space="preserve">
    <value>Subtotal</value>
  </data>
  <data name="suspend_sale" xml:space="preserve">
    <value>Suspend Sale</value>
  </data>
  <data name="tax_title" xml:space="preserve">
    <value>Tax (5 or 5%)</value>
  </data>
  <data name="today_sale" xml:space="preserve">
    <value>Today's Sale</value>
  </data>
  <data name="total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="total_items" xml:space="preserve">
    <value>Total Items</value>
  </data>
  <data name="total_payable" xml:space="preserve">
    <value>Total Payable</value>
  </data>
  <data name="total_paying" xml:space="preserve">
    <value>Total Paying</value>
  </data>
  <data name="type_reference_note" xml:space="preserve">
    <value>Type Reference Note</value>
  </data>
  <data name="UnitPrice" xml:space="preserve">
    <value>Unit Price</value>
  </data>
  <data name="update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="UserPassword" xml:space="preserve">
    <value>User Password</value>
  </data>
  <data name="view_all" xml:space="preserve">
    <value>View All</value>
  </data>
  <data name="visa" xml:space="preserve">
    <value>Visa</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
</root>